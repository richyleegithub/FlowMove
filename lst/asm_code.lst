A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
NO OBJECT MODULE REQUESTED
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE src\asm_code.a51 SET(SMALL) DEBUG PRINT(.\lst\asm_code.lst) OBJECT(.\ou
                      t\asm_code.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     
                       3     
                       4     
                       5     ;-----------------------------------------------------------------------------
                       6     ;$include (MC96FD316.h)
                +1     7     
                +1     8     
                +1     9     
                +1    10     
                +1    11     
                +1    12     
                +1    13     
                +1    14     ;#include <intrins.h>
                +2    15     
                +2    16     
                +2    17     
                +2    18     
                +2    19     
                +2    20     
                +2    21     
                +2    22     
                +2    23     
                +2    24     
                +2    25     
                +2    26  +1 $SAVE
                +2    27  +1 
                +2    28  +1 
                +2        +1 
                +2        +1 
                +2        +1 
                +2    32  +1 
                +2    33  +1 extern void          _nop_     (void);
*** _________________________^
*** ERROR #A9 IN 33 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 19): SYNTAX ERROR
                +2    34  +1 extern bit           _testbit_ (bit);
*** ______________________________________________^
*** ERROR #A50 IN 34 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 20): BIT-ADDRESS EXPECTED
                +2    35  +1 extern unsigned char _cror_    (unsigned char, unsigned char);
*** _________________________^
*** ERROR #A9 IN 35 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 21): SYNTAX ERROR
                +2    36  +1 extern unsigned int  _iror_    (unsigned int,  unsigned char);
*** _________________________^
*** ERROR #A9 IN 36 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 22): SYNTAX ERROR
                +2    37  +1 extern unsigned long _lror_    (unsigned long, unsigned char);
*** _________________________^
*** ERROR #A9 IN 37 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 23): SYNTAX ERROR
                +2    38  +1 extern unsigned char _crol_    (unsigned char, unsigned char);
*** _________________________^
*** ERROR #A9 IN 38 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 24): SYNTAX ERROR
                +2    39  +1 extern unsigned int  _irol_    (unsigned int,  unsigned char);
*** _________________________^
*** ERROR #A9 IN 39 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 25): SYNTAX ERROR
                +2    40  +1 extern unsigned long _lrol_    (unsigned long, unsigned char);
*** _________________________^
*** ERROR #A9 IN 40 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 26): SYNTAX ERROR
                +2    41  +1 extern unsigned char _chkfloat_(float);
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     2

*** _________________________^
*** ERROR #A9 IN 41 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 27): SYNTAX ERROR
                +2    42  +1 
                +2        +1 
                +2        +1 
                +2        +1 
                +2    46  +1 
                +2    47  +1 extern void          _push_    (unsigned char _sfr);
*** _________________________^
*** ERROR #A9 IN 47 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 33): SYNTAX ERROR
                +2    48  +1 extern void          _pop_     (unsigned char _sfr);
*** _________________________^
*** ERROR #A9 IN 48 (C:\KEIL_V5\C51\INC\INTRINS.H, LINE 34): SYNTAX ERROR
                +2    49  +1 
                +2    50  +1 
                +2    51  +1 $RESTORE
                +2    52     
                +2    53     
                +2    54     
                +1    55     
                +1    56     
                +1    57     
                +1    58     
                +1    59     
  0080          +1    60     sfr                     P0                      = 0x80;                 // P0 Data Register
  0080          +1    61             sbit    P00                     = 0x80;
  0081          +1    62             sbit    P01                     = 0x81;
  0082          +1    63             sbit    P02                     = 0x82;
  0083          +1    64             sbit    P03                     = 0x83;
  0084          +1    65             sbit    P04                     = 0x84;
  0085          +1    66             sbit    P05                     = 0x85;
  0086          +1    67             sbit    P06                     = 0x86;
  0087          +1    68             sbit    P07                     = 0x87;
                +1    69     
  00A1          +1    70     sfr                     P0IO            = 0xA1;                 // P0 Direction Register
  0091          +1    71     sfr                     P0OD            = 0x91;                 // P0 Open-drain Selection Register
  00AC          +1    72     sfr                     P0PU            = 0xAC;                 // P0 Pull-up Resistor Selection Register
                +1    73     
  0088          +1    74     sfr                     P1                      = 0x88;                 // P1 Data Register
  0088          +1    75             sbit    P10                     = 0x88;
  0089          +1    76             sbit    P11                     = 0x89;
  008A          +1    77             sbit    P12                     = 0x8A;
  008B          +1    78             sbit    P13                     = 0x8B;
  008C          +1    79             sbit    P14                     = 0x8C;
  008D          +1    80             sbit    P15                     = 0x8D;
  008E          +1    81             sbit    P16                     = 0x8E;
  008F          +1    82             sbit    P17                     = 0x8F;
                +1    83             
  00B1          +1    84     sfr                     P1IO            = 0xB1;                 // P1 Direction Register
  0092          +1    85     sfr                     P1OD            = 0x92;                 // P1 Open-drain Selection Register
  00AD          +1    86     sfr                     P1PU            = 0xAD;                 // P1 Pull-up Resistor Selection Register
  0095          +1    87     sfr                     P1DB            = 0x95;                 // P1 Debounce Enable Register
                +1    88     
  0090          +1    89     sfr                     P2                      = 0x90;                 // P2 Data Register
  0090          +1    90             sbit    P20                     = 0x90;
  0091          +1    91             sbit    P21                     = 0x91;
  0092          +1    92             sbit    P22                     = 0x92;
  0093          +1    93             sbit    P23                     = 0x93;
  0094          +1    94             sbit    P24                     = 0x94;
  0095          +1    95             sbit    P25                     = 0x95;
  0096          +1    96             sbit    P26                     = 0x96;
  0097          +1    97             sbit    P27                     = 0x97;
                +1    98     
  00B9          +1    99     sfr                     P2IO            = 0xB9;                 // P2 Direction Register
  0093          +1   100     sfr                     P2OD            = 0x93;                 // P2 Open-drain Selection Register
  00AE          +1   101     sfr                     P2PU            = 0xAE;                 // P2 Pull-up Resistor Selection Register
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     3

  0096          +1   102     sfr                     P23DB           = 0x96;                 // P2/P3 Debounce Enable Register
                +1   103     
  0098          +1   104     sfr                     P3                      = 0x98;                 // P3 Data Register
  0098          +1   105             sbit    P30                     = 0x98;
  0099          +1   106             sbit    P31                     = 0x99;
  009A          +1   107             sbit    P32                     = 0x9A;
  009B          +1   108             sbit    P33                     = 0x9B;
  009C          +1   109             sbit    P34                     = 0x9C;
  009D          +1   110             sbit    P35                     = 0x9D;
  009E          +1   111             sbit    P36                     = 0x9E;
  009F          +1   112             sbit    P37                     = 0x9F;
                +1   113     
  00C1          +1   114     sfr                     P3IO            = 0xC1;                 // P3 Direction Register
  0094          +1   115     sfr                     P3OD            = 0x94;                 // P3 Open-drain Selection Register
  00AF          +1   116     sfr                     P3PU            = 0xAF;                 // P3 Pull-up Resistor Selection Register
                +1   117     
  00F1          +1   118     sfr                     P0FSR           = 0xF1;                 //P0 Function Selection Register
  00F2          +1   119     sfr                     P1FSRL          = 0xF2;                 //P1 Function Selection Low Register
  00F3          +1   120     sfr                     P1FSRH          = 0xF3;                 //P1 Function Selection High Register
  00F4          +1   121     sfr                     P2FSRL          = 0xF4;                 //P2 Function Selection Low Register
  00F5          +1   122     sfr                     P2FSRH          = 0xF5;                 //P2 Function Selection High Register
  00F6          +1   123     sfr                     P3FSR           = 0xF6;                 //P3 Function Selection Register
                +1   124     
                +1   125     
  00A8          +1   126     sfr                     IE                      = 0xA8;                 // Interrupt Enable Register 0
  00A9          +1   127     sfr                     IE1                     = 0xA9;                 // Interrupt Enable Register 1
  00AA          +1   128     sfr                     IE2                     = 0xAA;                 // Interrupt Enable Register 2
  00AB          +1   129     sfr                     IE3                     = 0xAB;                 // Interrupt Enable Register 3
  00B8          +1   130     sfr                     IP                      = 0xB8;                 // Interrupt Priority Register 0
  00F8          +1   131     sfr                     IP1                     = 0xF8;                 // Interrupt Priority Register 1
  00C0          +1   132     sfr                     EIFLAG0         = 0xC0;                 // External Interrupt Flag 0 Register
  00B0          +1   133     sfr                     EIFLAG1         = 0xB0;                 // External Interrupt Flag 1 Register
  00A4          +1   134     sfr                     EIPOL0L         = 0xA4;                 // External Interrupt Polarity 0 Low Register
  00A5          +1   135     sfr                     EIPOL0H         = 0xA5;                 // External Interrupt Polarity 0 High Register
  00A6          +1   136     sfr                     EIPOL1          = 0xA6;                 // External Interrupt Polarity 1 Register
                +1   137     
                +1   138     
  008A          +1   139     sfr                     SCCR            = 0x8A;                 // System Clock Control Register
  00C8          +1   140     sfr                     OSCCR           = 0xC8;                 // Oscillator Control Register
                +1   141     
                +1   142     
  008C          +1   143     sfr                     BITCNT          = 0x8C;                 // Basic Interval Timer Counter Register
  008B          +1   144     sfr                     BITCR           = 0x8B;                 // Basic Interval Timer Control Register
                +1   145     
                +1   146     
                +1   147     
                +1           
                +1           
                +1           
                +1   151     extern unsigned char xdata WDTC;
*** _________________________^
*** ERROR #A9 IN 151 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 100): SYNTAX ERROR
                +1   152     extern unsigned char xdata WDTSR;
*** _________________________^
*** ERROR #A9 IN 152 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 105): SYNTAX ERROR
                +1   153     
  008E          +1   154     sfr                     WDTIDR          = 0x8E;                 // Watch Dog Timer Identification Register
  008D          +1   155     sfr                     WDTCR           = 0x8D;                 // Watch Dog Timer Control register
                +1   156     
                +1   157     
  0099          +1   158     sfr                     T0CR            = 0x99;                 // Timer 0 Control Register
  009A          +1   159     sfr                     T0CNT           = 0x9A;                 // Timer 0 Counter Register
  009B          +1   160     sfr                     T0DR            = 0x9B;                 // Timer 0 Data register
                +1   161     
                +1   162     
  00B2          +1   163     sfr                     T1CRL           = 0xB2;                 // Timer 1 Control Low Register
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     4

  00B3          +1   164     sfr                     T1CRH           = 0xB3;                 // Timer 1 Control High Register
  00B4          +1   165     sfr                     T1ADRL          = 0xB4;                 // Timer 1 A Data Low Register
  00B5          +1   166     sfr                     T1ADRH          = 0xB5;                 // Timer 1 A Data High Register
  00B6          +1   167     sfr                     T1BDRL          = 0xB6;                 // Timer 1 B Data Low Register
  00B7          +1   168     sfr                     T1BDRH          = 0xB7;                 // Timer 1 B Data High Register
                +1   169     
                +1   170     
  00BA          +1   171     sfr                     T2CRL           = 0xBA;                 // Timer 2 Control Low Register
  00BB          +1   172     sfr                     T2CRH           = 0xBB;                 // Timer 2 Control High Register
  00BC          +1   173     sfr                     T2ADRL          = 0xBC;                 // Timer 2 A Data Low Register
  00BD          +1   174     sfr                     T2ADRH          = 0xBD;                 // Timer 2 A Data High Register
  00BE          +1   175     sfr                     T2BDRL          = 0xBE;                 // Timer 2 B Data Low Register
  00BF          +1   176     sfr                     T2BDRH          = 0xBF;                 // Timer 2 B Data High Register
                +1   177     
                +1   178     
  00C2          +1   179     sfr                     T3CRL           = 0xC2;                 // Timer 3 Control Low Register
  00C3          +1   180     sfr                     T3CRH           = 0xC3;                 // Timer 3 Control High Register
  00C4          +1   181     sfr                     T3OUTCRL        = 0xC4;                 // Timer 3 Output Control Low Register
  00C5          +1   182     sfr                     T3OUTCRH        = 0xC5;                 // Timer 3 Output Control High Register
  00C6          +1   183     sfr                     T3PDRL          = 0xC6;                 // Timer 3 Period Data Low Register
  00C7          +1   184     sfr                     T3PDRH          = 0xC7;                 // Timer 3 Period Data High Register
  00CA          +1   185     sfr                     T3ADRL          = 0xCA;                 // Timer 3 A Data Low Register
  00CB          +1   186     sfr                     T3ADRH          = 0xCB;                 // Timer 3 A Data High Register
  00CC          +1   187     sfr                     T3BDRL          = 0xCC;                 // Timer 3 B Data Low Register
  00CD          +1   188     sfr                     T3BDRH          = 0xCD;                 // Timer 3 B Data High Register
  00CE          +1   189     sfr                     T3CDRL          = 0xCE;                 // Timer 3 C Data Low Register
  00CF          +1   190     sfr                     T3CDRH          = 0xCF;                 // Timer 3 C Data High Register
  00C9          +1   191     sfr                     T3DLY           = 0xC9;                 // Timer 3 PWM Output Delay Register
  00D1          +1   192     sfr                     T3INTCR         = 0xD1;                 // Timer 3 Interrupt Control Register
  00D2          +1   193     sfr                     T3IFR           = 0xD2;                 // Timer 3 Interrupt Flag Register
  00D3          +1   194     sfr                     T3ADTCR         = 0xD3;                 // Timer 3 A/DC Trigger Control Register
  00D4          +1   195     sfr                     T3ADTDR         = 0xD4;                 // Timer 3 A/DC Trigger Generator Data Register
  00D5          +1   196     sfr                     T3HIZCR         = 0xD5;                 // Timer 3 High-Impedance Control register
                +1   197     
                +1   198     
  008F          +1   199     sfr                     BUZDR           = 0x8F;                 // BUZZER Data Register
  0097          +1   200     sfr                     BUZCR           = 0x97;                 // BUZZER Control Register
                +1   201     
                +1   202     
  009C          +1   203     sfr                     ADCCRL          = 0x9C;                 // A/D Converter Control Low Register
  009D          +1   204     sfr                     ADCCRH          = 0x9D;                 // A/D Converter Control High Register
  009E          +1   205     sfr                     ADCDRL          = 0x9E;                 // A/D Converter Data Low Register
  009F          +1   206     sfr                     ADCDRH          = 0x9F;                 // A/D Converter Data High Register
                +1   207     
                +1   208     
  00EA          +1   209     sfr                     CMPCR           = 0xEA;                 // Comparator Control Register
  00E9          +1   210     sfr                     CMPPOL          = 0xE9;                 // Comparator Polarity Register
  00A0          +1   211     sfr                     CMPFLAG         = 0xA0;                 // Comparator Interrupt Flag Register
  00EC          +1   212     sfr                     CMPNFCR         = 0xEC;                 // Comparator Noise Filter Control Register
                +1   213     
                +1   214     
  00EB          +1   215     sfr                     AMPCR           = 0xEB;                 // OP-AMP Control Register
                +1   216     
                +1   217     
  00D9          +1   218     sfr                     USICR1          = 0xD9;                 // USI Control Register 1
  00DA          +1   219     sfr                     USICR2          = 0xDA;                 // USI Control Register 2
  00DB          +1   220     sfr                     USICR3          = 0xDB;                 // USI Control Register 3
  00DC          +1   221     sfr                     USICR4          = 0xDC;                 // USI Control Register 4
  00E1          +1   222     sfr                     USIST1          = 0xE1;                 // USI Status Register 1
  00E2          +1   223     sfr                     USIST2          = 0xE2;                 // USI Status Register 2
  00E3          +1   224     sfr                     USIBD           = 0xE3;                 // USI Baud Rate Generation Register
  00E5          +1   225     sfr                     USIDR           = 0xE5;                 // USI Data Register
  00E4          +1   226     sfr                     USISDHR         = 0xE4;                 // USI SDA Hold Time Register
  00E7          +1   227     sfr                     USISCHR         = 0xE7;                 // USI SCL High Period Register
  00E6          +1   228     sfr                     USISCLR         = 0xE6;                 // USI SCL Low Period Register
  00DD          +1   229     sfr                     USISAR          = 0xDD;                 // USI Slave Address Register
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     5

                +1   230     
                +1   231     
  00ED          +1   232     sfr                     CALCR           = 0xED;                 // Calculator Control Register
  00EE          +1   233     sfr                     CALPTR          = 0xEE;                 // Calculator Address Pointer
  00EF          +1   234     sfr                     CALDR           = 0xEF;                 // Calculator Data Register
                +1   235     
                +1   236     
  0087          +1   237     sfr                     PCON            = 0x87;                 // Power Control Register
  0086          +1   238     sfr                     LVICR           = 0x86;                 // Low Voltage Indicator Control Register
  00E8          +1   239     sfr                     RSTFR           = 0xE8;                 // Reset Flag Register
  00D8          +1   240     sfr                     LVRCR           = 0xD8;                 // Low Voltage Reset Control Register
                +1   241     
                +1   242     
  00FA          +1   243     sfr                     FSADRH          = 0xFA;                 // Flash Sector Address High Register
  00FB          +1   244     sfr                     FSADRM          = 0xFB;                 // Flash Sector Address Middle Register
  00FC          +1   245     sfr                     FSADRL          = 0xFC;                 // Flash Sector Address Low Register
  00FD          +1   246     sfr                     FIDR            = 0xFD;                 // Flash Identification Register
  00FE          +1   247     sfr                     FMCR            = 0xFE;                 // Flash Mode Control Register
                +1   248     
                +1   249     
                +1   250     
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1   261     extern unsigned char xdata FCSARH;
*** _________________________^
*** ERROR #A9 IN 261 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 210): SYNTAX ERROR
                +1   262     extern unsigned char xdata FCEARH;
*** _________________________^
*** ERROR #A9 IN 262 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 215): SYNTAX ERROR
                +1   263     extern unsigned char xdata FCSARM;
*** _________________________^
*** ERROR #A9 IN 263 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 216): SYNTAX ERROR
                +1   264     extern unsigned char xdata FCEARM;
*** _________________________^
*** ERROR #A9 IN 264 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 217): SYNTAX ERROR
                +1   265     extern unsigned char xdata FCSARL;
*** _________________________^
*** ERROR #A9 IN 265 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 218): SYNTAX ERROR
                +1   266     extern unsigned char xdata FCEARL;
*** _________________________^
*** ERROR #A9 IN 266 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 219): SYNTAX ERROR
                +1   267     extern unsigned char xdata FCCR;
*** _________________________^
*** ERROR #A9 IN 267 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 220): SYNTAX ERROR
                +1   268     extern unsigned char xdata FCDRH;
*** _________________________^
*** ERROR #A9 IN 268 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 221): SYNTAX ERROR
                +1   269     extern unsigned char xdata FCDRL;
*** _________________________^
*** ERROR #A9 IN 269 (C:\KEIL_V5\C51\INC\ABOV\MC96FD316.H, LINE 222): SYNTAX ERROR
                +1   270     
  00DF          +1   271     sfr                     FCDIN           = 0xDF;                 // Flash CRC Data In Register
                +1   272     
                +1   273     
  00E0          +1   274     sfr                     ACC                     = 0xE0;
  00F0          +1   275     sfr                     B                       = 0xF0;
  00D0          +1   276     sfr                     PSW                     = 0xD0;
  0081          +1   277     sfr                     SP                      = 0x81;
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     6

  0082          +1   278     sfr                     DPL                     = 0x82;
  0083          +1   279     sfr                     DPH                     = 0x83;
  0084          +1   280     sfr                     DPL1            = 0x84;
  0085          +1   281     sfr                     DPH1            = 0x85;
  00A2          +1   282     sfr                     EO                      = 0xA2;                 // EXTENDED OPERATION REGISTER
                +1   283     
                +1   284     
                +1   285     
                +1   286     
                +1   287     
                +1   288     
                     289     
                     290     
                     291     ;-----------------------------------------------------------------------------
                     292     
                     293         NAME      ASM_FUNC                                                                          ; Name of the program module
                     294         PUBLIC    Result_uu, Result_ss, _LdCaldr16u, _LdCaldr16s, _LdCaldr32u, _LdCaldr32s
                     295     
                     296     ;-----------------------------------------------------------------------------
                     297         ?PR?Result_uu?ASM_FUNC    SEGMENT    CODE
----                 298         RSEG    ?PR?Result_uu?ASM_FUNC                                                              ; Program segment for Result_uu
                     299     ; unsigned long Result_uu(void);
                     300     ; input: void
                     301     ; output: RRRR4(R4:R5:R6:R7)
                     302     ; output = (unsigned long)MO[31:0]
0000                 303     Result_uu:
0000 E5EF            304       MOV           A, CALDR
0002 FC              305       MOV           R4, A
0003 E5EF            306       MOV           A, CALDR
0005 FD              307       MOV           R5, A
0006 E5EF            308       MOV           A, CALDR
0008 FE              309       MOV           R6, A
0009 E5EF            310       MOV           A, CALDR
000B FF              311       MOV           R7, A
000C 22              312       RET
                     313     
                     314     ;-----------------------------------------------------------------------------
                     315         ?PR?Result_ss?ASM_FUNC    SEGMENT    CODE
----                 316         RSEG    ?PR?Result_ss?ASM_FUNC                                                              ; Program segment for Result_ss
                     317     ; signed long Result_ss(void);
                     318     ; input: void
                     319     ; output: RRRR4(R4:R5:R6:R7)
                     320     ; output = (signed long)MO[31:0]
0000                 321     Result_ss:
0000 E5EF            322       MOV           A, CALDR
0002 FC              323       MOV           R4, A
0003 E5EF            324       MOV           A, CALDR
0005 FD              325       MOV           R5, A
0006 E5EF            326       MOV           A, CALDR
0008 FE              327       MOV           R6, A
0009 E5EF            328       MOV           A, CALDR
000B FF              329       MOV           R7, A
000C 22              330       RET
                     331     
                     332     ;-----------------------------------------------------------------------------
                     333         ?PR?LdCaldr16u?ASM_FUNC    SEGMENT    CODE
----                 334         RSEG    ?PR?LdCaldr16u?ASM_FUNC                                                     ; Program segment for LdCaldr16u
                     335     ; void LdCaldr16u(unsigned int);
                     336     ; input: unsigned int
                     337     ; output: void
0000                 338     _LdCaldr16u:
0000 EE              339             MOV             A,R6
0001 F5EF            340       MOV           CALDR, A
0003 EF              341             MOV             A,R7
0004 F5EF            342       MOV           CALDR, A
0006 22              343       RET
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     7

                     344     
                     345     ;-----------------------------------------------------------------------------
                     346         ?PR?LdCaldr16s?ASM_FUNC    SEGMENT    CODE
----                 347         RSEG    ?PR?LdCaldr16s?ASM_FUNC                                                     ; Program segment for LdCaldr16s
                     348     ; void LdCaldr16s(signed int);
                     349     ; input: signed int
                     350     ; output: void
0000                 351     _LdCaldr16s:
0000 EE              352             MOV             A,R6
0001 F5EF            353       MOV           CALDR, A
0003 EF              354             MOV             A,R7
0004 F5EF            355       MOV           CALDR, A
0006 22              356       RET
                     357     
                     358     ;-----------------------------------------------------------------------------
                     359         ?PR?LdCaldr32u?ASM_FUNC    SEGMENT    CODE
----                 360         RSEG    ?PR?LdCaldr32u?ASM_FUNC                                                     ; Program segment for LdCaldr32u
                     361     ; void LdCaldr32u(unsigned long);
                     362     ; input: unsigned long
                     363     ; output: void
0000                 364     _LdCaldr32u:
0000 EC              365             MOV             A,R4
0001 F5EF            366       MOV           CALDR, A
0003 ED              367             MOV             A,R5
0004 F5EF            368       MOV           CALDR, A
0006 EE              369             MOV             A,R6
0007 F5EF            370       MOV           CALDR, A
0009 EF              371             MOV             A,R7
000A F5EF            372       MOV           CALDR, A
000C 22              373       RET
                     374     
                     375     ;-----------------------------------------------------------------------------
                     376         ?PR?LdCaldr32s?ASM_FUNC    SEGMENT    CODE
----                 377         RSEG    ?PR?LdCaldr32s?ASM_FUNC                                                     ; Program segment for LdCaldr32s
                     378     ; void LdCaldr32s(signed long);
                     379     ; input: signed long
                     380     ; output: void
0000                 381     _LdCaldr32s:
0000 EC              382             MOV             A,R4
0001 F5EF            383       MOV           CALDR, A
0003 ED              384             MOV             A,R5
0004 F5EF            385       MOV           CALDR, A
0006 EE              386             MOV             A,R6
0007 F5EF            387       MOV           CALDR, A
0009 EF              388             MOV             A,R7
000A F5EF            389       MOV           CALDR, A
000C 22              390       RET
                     391     
                     392     ;-----------------------------------------------------------------------------
                     393         END
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     8

SYMBOL TABLE LISTING
------ ----- -------


N A M E                  T Y P E  V A L U E   ATTRIBUTES

?PR?LDCALDR16S?ASM_FUNC  C SEG    0007H       REL=UNIT
?PR?LDCALDR16U?ASM_FUNC  C SEG    0007H       REL=UNIT
?PR?LDCALDR32S?ASM_FUNC  C SEG    000DH       REL=UNIT
?PR?LDCALDR32U?ASM_FUNC  C SEG    000DH       REL=UNIT
?PR?RESULT_SS?ASM_FUNC.  C SEG    000DH       REL=UNIT
?PR?RESULT_UU?ASM_FUNC.  C SEG    000DH       REL=UNIT
ACC . . . . . . . . . .  D ADDR   00E0H   A   
ADCCRH. . . . . . . . .  D ADDR   009DH   A   
ADCCRL. . . . . . . . .  D ADDR   009CH   A   
ADCDRH. . . . . . . . .  D ADDR   009FH   A   
ADCDRL. . . . . . . . .  D ADDR   009EH   A   
AMPCR . . . . . . . . .  D ADDR   00EBH   A   
ASM_FUNC. . . . . . . .  N NUMB   -----       
B . . . . . . . . . . .  D ADDR   00F0H   A   
BITCNT. . . . . . . . .  D ADDR   008CH   A   
BITCR . . . . . . . . .  D ADDR   008BH   A   
BUZCR . . . . . . . . .  D ADDR   0097H   A   
BUZDR . . . . . . . . .  D ADDR   008FH   A   
CALCR . . . . . . . . .  D ADDR   00EDH   A   
CALDR . . . . . . . . .  D ADDR   00EFH   A   
CALPTR. . . . . . . . .  D ADDR   00EEH   A   
CHAR. . . . . . . . . .    ----   -----       
CMPCR . . . . . . . . .  D ADDR   00EAH   A   
CMPFLAG . . . . . . . .  D ADDR   00A0H   A   
CMPNFCR . . . . . . . .  D ADDR   00ECH   A   
CMPPOL. . . . . . . . .  D ADDR   00E9H   A   
DPH . . . . . . . . . .  D ADDR   0083H   A   
DPH1. . . . . . . . . .  D ADDR   0085H   A   
DPL . . . . . . . . . .  D ADDR   0082H   A   
DPL1. . . . . . . . . .  D ADDR   0084H   A   
EIFLAG0 . . . . . . . .  D ADDR   00C0H   A   
EIFLAG1 . . . . . . . .  D ADDR   00B0H   A   
EIPOL0H . . . . . . . .  D ADDR   00A5H   A   
EIPOL0L . . . . . . . .  D ADDR   00A4H   A   
EIPOL1. . . . . . . . .  D ADDR   00A6H   A   
EO. . . . . . . . . . .  D ADDR   00A2H   A   
EXTERN. . . . . . . . .    ----   -----       
FCCR. . . . . . . . . .    ----   -----       
FCDIN . . . . . . . . .  D ADDR   00DFH   A   
FCDRH . . . . . . . . .    ----   -----       
FCDRL . . . . . . . . .    ----   -----       
FCEARH. . . . . . . . .    ----   -----       
FCEARL. . . . . . . . .    ----   -----       
FCEARM. . . . . . . . .    ----   -----       
FCSARH. . . . . . . . .    ----   -----       
FCSARL. . . . . . . . .    ----   -----       
FCSARM. . . . . . . . .    ----   -----       
FIDR. . . . . . . . . .  D ADDR   00FDH   A   
FLOAT . . . . . . . . .    ----   -----       
FMCR. . . . . . . . . .  D ADDR   00FEH   A   
FSADRH. . . . . . . . .  D ADDR   00FAH   A   
FSADRL. . . . . . . . .  D ADDR   00FCH   A   
FSADRM. . . . . . . . .  D ADDR   00FBH   A   
IE. . . . . . . . . . .  D ADDR   00A8H   A   
IE1 . . . . . . . . . .  D ADDR   00A9H   A   
IE2 . . . . . . . . . .  D ADDR   00AAH   A   
IE3 . . . . . . . . . .  D ADDR   00ABH   A   
INT . . . . . . . . . .    ----   -----       
IP. . . . . . . . . . .  D ADDR   00B8H   A   
IP1 . . . . . . . . . .  D ADDR   00F8H   A   
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE     9

LONG. . . . . . . . . .    ----   -----       
LVICR . . . . . . . . .  D ADDR   0086H   A   
LVRCR . . . . . . . . .  D ADDR   00D8H   A   
OSCCR . . . . . . . . .  D ADDR   00C8H   A   
P0. . . . . . . . . . .  D ADDR   0080H   A   
P00 . . . . . . . . . .  B ADDR   0080H.0 A   
P01 . . . . . . . . . .  B ADDR   0080H.1 A   
P02 . . . . . . . . . .  B ADDR   0080H.2 A   
P03 . . . . . . . . . .  B ADDR   0080H.3 A   
P04 . . . . . . . . . .  B ADDR   0080H.4 A   
P05 . . . . . . . . . .  B ADDR   0080H.5 A   
P06 . . . . . . . . . .  B ADDR   0080H.6 A   
P07 . . . . . . . . . .  B ADDR   0080H.7 A   
P0FSR . . . . . . . . .  D ADDR   00F1H   A   
P0IO. . . . . . . . . .  D ADDR   00A1H   A   
P0OD. . . . . . . . . .  D ADDR   0091H   A   
P0PU. . . . . . . . . .  D ADDR   00ACH   A   
P1. . . . . . . . . . .  D ADDR   0088H   A   
P10 . . . . . . . . . .  B ADDR   0088H.0 A   
P11 . . . . . . . . . .  B ADDR   0088H.1 A   
P12 . . . . . . . . . .  B ADDR   0088H.2 A   
P13 . . . . . . . . . .  B ADDR   0088H.3 A   
P14 . . . . . . . . . .  B ADDR   0088H.4 A   
P15 . . . . . . . . . .  B ADDR   0088H.5 A   
P16 . . . . . . . . . .  B ADDR   0088H.6 A   
P17 . . . . . . . . . .  B ADDR   0088H.7 A   
P1DB. . . . . . . . . .  D ADDR   0095H   A   
P1FSRH. . . . . . . . .  D ADDR   00F3H   A   
P1FSRL. . . . . . . . .  D ADDR   00F2H   A   
P1IO. . . . . . . . . .  D ADDR   00B1H   A   
P1OD. . . . . . . . . .  D ADDR   0092H   A   
P1PU. . . . . . . . . .  D ADDR   00ADH   A   
P2. . . . . . . . . . .  D ADDR   0090H   A   
P20 . . . . . . . . . .  B ADDR   0090H.0 A   
P21 . . . . . . . . . .  B ADDR   0090H.1 A   
P22 . . . . . . . . . .  B ADDR   0090H.2 A   
P23 . . . . . . . . . .  B ADDR   0090H.3 A   
P23DB . . . . . . . . .  D ADDR   0096H   A   
P24 . . . . . . . . . .  B ADDR   0090H.4 A   
P25 . . . . . . . . . .  B ADDR   0090H.5 A   
P26 . . . . . . . . . .  B ADDR   0090H.6 A   
P27 . . . . . . . . . .  B ADDR   0090H.7 A   
P2FSRH. . . . . . . . .  D ADDR   00F5H   A   
P2FSRL. . . . . . . . .  D ADDR   00F4H   A   
P2IO. . . . . . . . . .  D ADDR   00B9H   A   
P2OD. . . . . . . . . .  D ADDR   0093H   A   
P2PU. . . . . . . . . .  D ADDR   00AEH   A   
P3. . . . . . . . . . .  D ADDR   0098H   A   
P30 . . . . . . . . . .  B ADDR   0098H.0 A   
P31 . . . . . . . . . .  B ADDR   0098H.1 A   
P32 . . . . . . . . . .  B ADDR   0098H.2 A   
P33 . . . . . . . . . .  B ADDR   0098H.3 A   
P34 . . . . . . . . . .  B ADDR   0098H.4 A   
P35 . . . . . . . . . .  B ADDR   0098H.5 A   
P36 . . . . . . . . . .  B ADDR   0098H.6 A   
P37 . . . . . . . . . .  B ADDR   0098H.7 A   
P3FSR . . . . . . . . .  D ADDR   00F6H   A   
P3IO. . . . . . . . . .  D ADDR   00C1H   A   
P3OD. . . . . . . . . .  D ADDR   0094H   A   
P3PU. . . . . . . . . .  D ADDR   00AFH   A   
PCON. . . . . . . . . .  D ADDR   0087H   A   
PSW . . . . . . . . . .  D ADDR   00D0H   A   
RESULT_SS . . . . . . .  C ADDR   0000H   R   SEG=?PR?RESULT_SS?ASM_FUNC
RESULT_UU . . . . . . .  C ADDR   0000H   R   SEG=?PR?RESULT_UU?ASM_FUNC
RSTFR . . . . . . . . .  D ADDR   00E8H   A   
SCCR. . . . . . . . . .  D ADDR   008AH   A   
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE    10

SP. . . . . . . . . . .  D ADDR   0081H   A   
T0CNT . . . . . . . . .  D ADDR   009AH   A   
T0CR. . . . . . . . . .  D ADDR   0099H   A   
T0DR. . . . . . . . . .  D ADDR   009BH   A   
T1ADRH. . . . . . . . .  D ADDR   00B5H   A   
T1ADRL. . . . . . . . .  D ADDR   00B4H   A   
T1BDRH. . . . . . . . .  D ADDR   00B7H   A   
T1BDRL. . . . . . . . .  D ADDR   00B6H   A   
T1CRH . . . . . . . . .  D ADDR   00B3H   A   
T1CRL . . . . . . . . .  D ADDR   00B2H   A   
T2ADRH. . . . . . . . .  D ADDR   00BDH   A   
T2ADRL. . . . . . . . .  D ADDR   00BCH   A   
T2BDRH. . . . . . . . .  D ADDR   00BFH   A   
T2BDRL. . . . . . . . .  D ADDR   00BEH   A   
T2CRH . . . . . . . . .  D ADDR   00BBH   A   
T2CRL . . . . . . . . .  D ADDR   00BAH   A   
T3ADRH. . . . . . . . .  D ADDR   00CBH   A   
T3ADRL. . . . . . . . .  D ADDR   00CAH   A   
T3ADTCR . . . . . . . .  D ADDR   00D3H   A   
T3ADTDR . . . . . . . .  D ADDR   00D4H   A   
T3BDRH. . . . . . . . .  D ADDR   00CDH   A   
T3BDRL. . . . . . . . .  D ADDR   00CCH   A   
T3CDRH. . . . . . . . .  D ADDR   00CFH   A   
T3CDRL. . . . . . . . .  D ADDR   00CEH   A   
T3CRH . . . . . . . . .  D ADDR   00C3H   A   
T3CRL . . . . . . . . .  D ADDR   00C2H   A   
T3DLY . . . . . . . . .  D ADDR   00C9H   A   
T3HIZCR . . . . . . . .  D ADDR   00D5H   A   
T3IFR . . . . . . . . .  D ADDR   00D2H   A   
T3INTCR . . . . . . . .  D ADDR   00D1H   A   
T3OUTCRH. . . . . . . .  D ADDR   00C5H   A   
T3OUTCRL. . . . . . . .  D ADDR   00C4H   A   
T3PDRH. . . . . . . . .  D ADDR   00C7H   A   
T3PDRL. . . . . . . . .  D ADDR   00C6H   A   
UNSIGNED. . . . . . . .    ----   -----       
USIBD . . . . . . . . .  D ADDR   00E3H   A   
USICR1. . . . . . . . .  D ADDR   00D9H   A   
USICR2. . . . . . . . .  D ADDR   00DAH   A   
USICR3. . . . . . . . .  D ADDR   00DBH   A   
USICR4. . . . . . . . .  D ADDR   00DCH   A   
USIDR . . . . . . . . .  D ADDR   00E5H   A   
USISAR. . . . . . . . .  D ADDR   00DDH   A   
USISCHR . . . . . . . .  D ADDR   00E7H   A   
USISCLR . . . . . . . .  D ADDR   00E6H   A   
USISDHR . . . . . . . .  D ADDR   00E4H   A   
USIST1. . . . . . . . .  D ADDR   00E1H   A   
USIST2. . . . . . . . .  D ADDR   00E2H   A   
VOID. . . . . . . . . .    ----   -----       
WDTC. . . . . . . . . .    ----   -----       
WDTCR . . . . . . . . .  D ADDR   008DH   A   
WDTIDR. . . . . . . . .  D ADDR   008EH   A   
WDTSR . . . . . . . . .    ----   -----       
_CHKFLOAT_. . . . . . .    ----   -----       
_CROL_. . . . . . . . .    ----   -----       
_CROR_. . . . . . . . .    ----   -----       
_IROL_. . . . . . . . .    ----   -----       
_IROR_. . . . . . . . .    ----   -----       
_LDCALDR16S . . . . . .  C ADDR   0000H   R   SEG=?PR?LDCALDR16S?ASM_FUNC
_LDCALDR16U . . . . . .  C ADDR   0000H   R   SEG=?PR?LDCALDR16U?ASM_FUNC
_LDCALDR32S . . . . . .  C ADDR   0000H   R   SEG=?PR?LDCALDR32S?ASM_FUNC
_LDCALDR32U . . . . . .  C ADDR   0000H   R   SEG=?PR?LDCALDR32U?ASM_FUNC
_LROL_. . . . . . . . .    ----   -----       
_LROR_. . . . . . . . .    ----   -----       
_NOP_ . . . . . . . . .    ----   -----       
_POP_ . . . . . . . . .    ----   -----       
_PUSH_. . . . . . . . .    ----   -----       
A51 MACRO ASSEMBLER  ASM_CODE                                                             06/15/2022 18:32:26 PAGE    11

_SFR. . . . . . . . . .    ----   -----       
_TESTBIT_ . . . . . . .    ----   -----       


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 22 ERROR(S)
