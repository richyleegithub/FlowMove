C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\out\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(7,SPEED) BROWSE NOAREGS INCDIR(.\inc) DEFINE(xLDO_5V
                    -) DEBUG OBJECTEXTEND CODE PRINT(.\lst\main.lst) TABS(2) OBJECT(.\out\main.obj)

line level    source

   1          //======================================================
   2          // Main program routine
   3          // - Device name  : MC96FD316
   4          // - Package type : 28TSSOP
   5          //======================================================
   6          // For XDATA variable : V1.041.00 ~
   7          #define   MAIN  1
   8          
   9          
  10          // Generated    : Wed, Apr 20, 2022 (17:28:48)
  11          #include  "MC96FD316.h"
  12          #include  "func_def.h"
  13          #include  "drv_led.h"
  14          #include  "drv_key.h"
  15          #include  "drv_battery.h"
  16          #include  "drv_motor.h"
  17          #include  "drv_adc.h"
  18          #include  "drv_timer.h"
  19          #include  "drv_uart.h"
  20          #include  "sys_manage.h"
  21          #include  "sys_message.h"
  22          #include  "drv_charge.h"
  23          #include    "utiles.h"
  24          
  25          
  26          
  27          
  28          uint32_t  systme_tick;
  29          void main()
  30          {
  31   1        cli();            // disable INT. during peripheral setting
  32   1        port_init();      // initialize ports
  33   1        clock_init();     // initialize operation clock
  34   1        ADC_init();       // initialize A/D convertor
  35   1        ExINT_init();     // initialize external interrupt
  36   1        OPAMP_init();     // initialize OPAMP
  37   1        Timer0_init();    // initialize Timer0
  38   1        //Timer1_init();    // initialize Timer1
  39   1        Timer2_init();    // initialize Timer2
  40   1        Timer3_init();    // initialize Timer3
  41   1        
  42   1      
  43   1        UART_init();      // initialize UART interface
  44   1      
  45   1      
  46   1        //WDT_init();       // initialize Watch-dog timer
  47   1        drv_adc_ini();
  48   1        drv_led_ini();
  49   1        drv_charge_ini();
  50   1        drv_battery_ini();
  51   1        drv_uart_ini();
  52   1        ini_message();
  53   1        Init_evTimers();
  54   1        sys_process_ini();
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 2   

  55   1        sei();            // enable INT.
  56   1        
  57   1      
  58   1        while(1){
  59   2          drv_adc();
  60   2          drv_comm();
  61   2          drv_uart_tx();
  62   2          
  63   2          drv_key();
  64   2          drv_led();
  65   2          drv_motor();
  66   2          Drv_Charge();
  67   2          drv_battery();
  68   2          drv_time();
  69   2        
  70   2          sys_process();
  71   2          
  72   2        }
  73   1      }
  74          
  75          //======================================================
  76          // interrupt routines
  77          //======================================================
  78          
  79          
  80          
  81          
  82          
  83          void INT_Ext11() interrupt 11
  84          {
  85   1        // External interrupt 11
  86   1          motor_FG_pluse++;
  87   1      }
  88          
  89          void INT_Timer0(void) interrupt 12
  90          {
  91   1        // Timer0 interrupt
  92   1        // about every 1ms to generate interrupt.
  93   1      
  94   1         drv_key_tick++;
  95   1         drv_timer_tick++;
  96   1         drv_motor_tick++;
  97   1         drv_battery_tick++;
  98   1         drv_charge_tick++;
  99   1         drv_led_tick++;
 100   1         rx_timeout++;
 101   1         rx_byte_timeout++;
 102   1      }
 103          #if 0
              //======================================================
              // peripheral setting routines
              //======================================================
              
              unsigned char UART_read()
              {
                unsigned char dat;
                
                while(!(USIST1 & 0x20));  // wait
                dat = USIDR;      // read
                return  dat;
              }
              
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 3   

              unsigned int ADC_read()
              {
                // read A/D convertor
                unsigned int adcVal;
                
                while(!(ADCCRL & 0x10));  // wait ADC busy
                adcVal = ADCDRH << 8; // read ADC high
                adcVal |= ADCDRL; // read ADC low
                return  adcVal;
              }
              #endif
 128          
 129          
 130          void ADC_init()
 131          {
 132   1        // initialize A/D convertor
 133   1        ADCCRL = 0x80;    // setting
 134   1        ADCCRH = 0x07;    // trigger source, alignment, frequency
 135   1      }
 136          #if 0
              void ADC_start(unsigned char ch)
              {
                // start A/D convertor
                ADCCRL = (ADCCRL & 0xf0) | (ch & 0x0f); // select channel
                ADCCRL |= 0x40;   // start ADC
              }
              #endif
 144          
 145          void ExINT_init()
 146          {
 147   1        // initialize external interrupt
 148   1        EIPOL0H = 0x00;   // edge : external INT.6~4
 149   1        EIPOL0L = 0x00;   // edge : external INT.3~0
 150   1        EIPOL1 = 0x01;    // edge : external INT.13~11
 151   1      
 152   1        IE1 |= 0x20;      // Enable Ext.INT.11
 153   1      }
 154          
 155          void OPAMP_init()
 156          {
 157   1        // initialize OPAMP
 158   1        AMPCR = 0x01;     // enable OPAMP
 159   1      }
 160          
 161          void Timer0_init()
 162          {
 163   1        // initialize Timer0
 164   1        // 8bit timer, period = 0.998400mS
 165   1        T0CR = 0x0B;      // timer setting
 166   1        T0DR = 0x26;      // period count
 167   1      
 168   1        IE2 |= 0x01;      // Enable Timer0 interrupt
 169   1        T0CR |= 0x80;     // enable counter
 170   1      }
 171          
 172          void Timer2_init()
 173          {
 174   1        // initialize Timer2
 175   1        // 16bit PWM, period = 0.050000mS ( 20000.000000Hz )
 176   1        //     PWM duty = 50.000000%
 177   1        T2CRH = 0x20;     // PWM setting High, 1 shot mode
 178   1        T2CRH |= 0x30;    // PWM repeat mode
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 4   

 179   1        //T2CRL = 0xC4;     // PWM setting Low
 180   1        T2CRL = 0xC0;     // PWM setting Low
 181   1        T2BDRH = 0x00;    // duty High
 182   1        T2BDRL = 0x00;    // duty Low
 183   1        T2ADRH = 0x03;    // period count High
 184   1        T2ADRL = 0xE7;    // period count Low
 185   1        //T2CRL |= 0x08;  // Disable reload
 186   1        //T2CRH |= 0x80;    // enable counter
 187   1      }
 188          
 189          void Timer3_init()
 190          {
 191   1        // initialize Timer3
 192   1        // 16bit PWM, period = 1.000000mS ( 1000.000000Hz )
 193   1        //     PWM duty A,B,C = 50.000000%, 0.020000%, 99.360000%
 194   1        T3ADRH = 0x0;     // duty High
 195   1        T3ADRL = 0x00;    // duty Low
 196   1      
 197   1        T3BDRH = 0x00;    // duty High
 198   1        T3BDRL = 0x00;    // duty Low
 199   1        
 200   1        T3CDRH = 0x0;     // duty High
 201   1        T3CDRL = 0x0;     // duty Low
 202   1      
 203   1        //T3DLY = 0xXX;   // PWM output delay
 204   1        T3OUTCRH = 0xC6;  // PWM output control High
 205   1        //T3OUTCRL = 0xXX;  // PWM output control Low
 206   1        T3PDRH = 0x4E;    // period count High
 207   1        T3PDRL = 0x1F;    // period count Low
 208   1        //T3ADTDR = 0xXX; // ADC trigger generator
 209   1        //T3ADTCR = 0xXX; // ADC trigger control
 210   1        //T3CRL = 0xXX;   // timer control Low
 211   1        T3CRH = 0x3D;     // timer control High
 212   1        T3CRH |= 0x80;    // enable counter
 213   1      
 214   1      
 215   1      
 216   1      
 217   1      
 218   1      
 219   1      }
 220          
 221          void UART_init()
 222          {
 223   1        // initialize UART interface
 224   1        // UART : ASync. 9615bps N 8 1
 225   1        USICR2 = 0x02;    // activate USI
 226   1        USICR1 = 0x06;    // Async/Sync, bit count, parity
 227   1        USICR2 |= 0xAC;   // interrupt, speed
 228   1        USICR3 = 0x00;    // stop bit
 229   1        USIBD = 0x81;     // baud rate
 230   1        IE1 |= 0x08;      // enable UART Rx interrupt
 231   1      //  IE1 |= 0x10;    // enable UART Tx interrupt
 232   1      
 233   1      }
 234          #if 0
              void UART_write(unsigned char dat)
              {
                while(!(USIST1 & 0x80));  // wait
                USIDR = dat;      // write
              }
              #endif
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 5   

 241          
 242          void WDT_init()
 243          {
 244   1        // initialize Watch-dog timer
 245   1        WDTCR = 0x95;     // set
 246   1        WDTC = 0x96;      // WDT clear & run
 247   1      }
 248          
 249          void clock_init()
 250          {
 251   1        // internal RC clock (20.000000MHz)
 252   1        OSCCR = 0x28;     // Set Int. OSC
 253   1        SCCR = 0x00;      // Use Int. OSC
 254   1      }
 255          
 256          void port_init()
 257          {
 258   1        // initialize ports
 259   1        //   2 : P27      out DIR
 260   1        //   3 : EINT11   in  FG
 261   1        //   4 : PWM2o    out MOTO_PWM
 262   1        //   5 : AN6      in  BAT_DETECT
 263   1        //   7 : P17      out POWER_CTRL
 264   1        //   8 : OPout    out OPOUT
 265   1        //   9 : OP-      in  OP-
 266   1        //  10 : OP+      in  OP+
 267   1        //  11 : P13      out 
 268   1        //  12 : P12      out 
 269   1        //  13 : T1       in  DC_IN
 270   1        //  14 : P10      in  POWR_KEY
 271   1        //  16 : P21      out SEG5
 272   1        //  17 : P20      out SEG4
 273   1        //  18 : P05      out SEG3
 274   1        //  19 : P04      out SEG2
 275   1        //  20 : P03      out SEG1
 276   1        //  21 : PWM3BA   out LED_B
 277   1        //  22 : P01      out SEG0
 278   1        //  23 : PWM3AA   out LED_R
 279   1        //  24 : RxD      in  RXD
 280   1        //  25 : TxD      out TXD
 281   1        //  26 : P31      out COM1
 282   1        //  27 : P30      out COM0
 283   1        
 284   1        P0   = 0x3A;      // port initial value
 285   1        P0IO = 0xFF;      // direction
 286   1        P0PU = 0x00;      // pullup
 287   1        P0OD = 0x3A;      // open drain
 288   1      
 289   1        P1   = 0x0f;      // port initial value
 290   1        P1IO = 0xCC;      // direction
 291   1        P1PU = 0x02;      // pullup
 292   1        P1OD = 0x0C;      // open drain
 293   1        P1DB = 0x03;      // debounce : P17~P10
 294   1      
 295   1      
 296   1      
 297   1      
 298   1        P2   = 0x03;      // port initial value
 299   1      
 300   1        P2IO = 0xEB;      // direction
 301   1        P2PU = 0x10;      // pullup
 302   1        P2OD = 0x83;      // open drain
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 6   

 303   1        P23DB = 0x02;     // bit7~6(debounce clock), bit2~0=P35,P24,23 debounce
 304   1      
 305   1        //P2IO = 0xEB;      // direction
 306   1        //P2PU = 0x10;      // pullup
 307   1        //P2OD = 0x8B;      // open drain
 308   1        //P23DB = 0x02;     // bit7~6(debounce clock), bit2~0=P35,P24,23 debounce
 309   1      
 310   1      
 311   1        P3   = 0x03;      // port initial value
 312   1        P3IO = 0xF7;      // direction
 313   1        P3PU = 0x00;      // pullup
 314   1        P3OD = 0x00;      // open drain
 315   1      
 316   1      
 317   1        // Set port functions
 318   1        P0FSR = 0x05;     // P0 selection
 319   1        P1FSRH = 0x15;    // P1 selection High
 320   1        P1FSRL = 0x00;    // P1 selection Low
 321   1        P2FSRH = 0x00;    // P2 selection High
 322   1        P2FSRL = 0x60;    // P2 selection Low
 323   1        P3FSR = 0x0C;     // P3 selection
 324   1        
 325   1      
 326   1      }
 327          
 328          
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000 53A87F            ANL     IE,#07FH
                                           ; SOURCE LINE # 32
0003 120000      R     LCALL   port_init
                                           ; SOURCE LINE # 33
0006 120000      R     LCALL   clock_init
                                           ; SOURCE LINE # 34
0009 120000      R     LCALL   ADC_init
                                           ; SOURCE LINE # 35
000C 120000      R     LCALL   ExINT_init
                                           ; SOURCE LINE # 36
000F 120000      R     LCALL   OPAMP_init
                                           ; SOURCE LINE # 37
0012 120000      R     LCALL   Timer0_init
                                           ; SOURCE LINE # 39
0015 120000      R     LCALL   Timer2_init
                                           ; SOURCE LINE # 40
0018 120000      R     LCALL   Timer3_init
                                           ; SOURCE LINE # 43
001B 120000      R     LCALL   UART_init
                                           ; SOURCE LINE # 47
001E 120000      E     LCALL   drv_adc_ini
                                           ; SOURCE LINE # 48
0021 120000      E     LCALL   drv_led_ini
                                           ; SOURCE LINE # 49
0024 120000      E     LCALL   drv_charge_ini
                                           ; SOURCE LINE # 50
0027 120000      E     LCALL   drv_battery_ini
                                           ; SOURCE LINE # 51
002A 120000      E     LCALL   drv_uart_ini
                                           ; SOURCE LINE # 52
002D 120000      E     LCALL   ini_message
                                           ; SOURCE LINE # 53
0030 120000      E     LCALL   Init_evTimers
                                           ; SOURCE LINE # 54
0033 120000      E     LCALL   sys_process_ini
                                           ; SOURCE LINE # 55
0036 43A880            ORL     IE,#080H
0039         ?C0007:
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0039 120000      E     LCALL   drv_adc
                                           ; SOURCE LINE # 60
003C 120000      E     LCALL   drv_comm
                                           ; SOURCE LINE # 61
003F 120000      E     LCALL   drv_uart_tx
                                           ; SOURCE LINE # 63
0042 120000      E     LCALL   drv_key
                                           ; SOURCE LINE # 64
0045 120000      E     LCALL   drv_led
                                           ; SOURCE LINE # 65
0048 120000      E     LCALL   drv_motor
                                           ; SOURCE LINE # 66
004B 120000      E     LCALL   Drv_Charge
                                           ; SOURCE LINE # 67
004E 120000      E     LCALL   drv_battery
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 8   

                                           ; SOURCE LINE # 68
0051 120000      E     LCALL   drv_time
                                           ; SOURCE LINE # 70
0054 120000      E     LCALL   sys_process
                                           ; SOURCE LINE # 72
0057 80E0              SJMP    ?C0007
0059 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION INT_Ext11 (BEGIN)
0000 C0E0              PUSH    ACC
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 86
0002 0500        E     INC     motor_FG_pluse+01H
0004 E500        E     MOV     A,motor_FG_pluse+01H
0006 7002              JNZ     ?C0022
0008 0500        E     INC     motor_FG_pluse
000A         ?C0022:
                                           ; SOURCE LINE # 87
000A D0E0              POP     ACC
000C 32                RETI    
             ; FUNCTION INT_Ext11 (END)

             ; FUNCTION INT_Timer0 (BEGIN)
0000 C0E0              PUSH    ACC
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 94
0002 0500        E     INC     drv_key_tick
                                           ; SOURCE LINE # 95
0004 0500        E     INC     drv_timer_tick
                                           ; SOURCE LINE # 96
0006 0500        E     INC     drv_motor_tick
                                           ; SOURCE LINE # 97
0008 0500        E     INC     drv_battery_tick
                                           ; SOURCE LINE # 98
000A 0500        E     INC     drv_charge_tick
                                           ; SOURCE LINE # 99
000C 0500        E     INC     drv_led_tick
                                           ; SOURCE LINE # 100
000E 0500        E     INC     rx_timeout+01H
0010 E500        E     MOV     A,rx_timeout+01H
0012 7002              JNZ     ?C0023
0014 0500        E     INC     rx_timeout
0016         ?C0023:
                                           ; SOURCE LINE # 101
0016 0500        E     INC     rx_byte_timeout+01H
0018 E500        E     MOV     A,rx_byte_timeout+01H
001A 7002              JNZ     ?C0024
001C 0500        E     INC     rx_byte_timeout
001E         ?C0024:
                                           ; SOURCE LINE # 102
001E D0E0              POP     ACC
0020 32                RETI    
             ; FUNCTION INT_Timer0 (END)

             ; FUNCTION ADC_init (BEGIN)
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 133
0000 759C80            MOV     ADCCRL,#080H
                                           ; SOURCE LINE # 134
0003 759D07            MOV     ADCCRH,#07H
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 9   

                                           ; SOURCE LINE # 135
0006 22                RET     
             ; FUNCTION ADC_init (END)

             ; FUNCTION ExINT_init (BEGIN)
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 148
0000 E4                CLR     A
0001 F5A5              MOV     EIPOL0H,A
                                           ; SOURCE LINE # 149
0003 F5A4              MOV     EIPOL0L,A
                                           ; SOURCE LINE # 150
0005 75A601            MOV     EIPOL1,#01H
                                           ; SOURCE LINE # 152
0008 43A920            ORL     IE1,#020H
                                           ; SOURCE LINE # 153
000B 22                RET     
             ; FUNCTION ExINT_init (END)

             ; FUNCTION OPAMP_init (BEGIN)
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 158
0000 75EB01            MOV     AMPCR,#01H
                                           ; SOURCE LINE # 159
0003 22                RET     
             ; FUNCTION OPAMP_init (END)

             ; FUNCTION Timer0_init (BEGIN)
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 165
0000 75990B            MOV     T0CR,#0BH
                                           ; SOURCE LINE # 166
0003 759B26            MOV     T0DR,#026H
                                           ; SOURCE LINE # 168
0006 43AA01            ORL     IE2,#01H
                                           ; SOURCE LINE # 169
0009 439980            ORL     T0CR,#080H
                                           ; SOURCE LINE # 170
000C 22                RET     
             ; FUNCTION Timer0_init (END)

             ; FUNCTION Timer2_init (BEGIN)
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 177
0000 75BB20            MOV     T2CRH,#020H
                                           ; SOURCE LINE # 178
0003 43BB30            ORL     T2CRH,#030H
                                           ; SOURCE LINE # 180
0006 75BAC0            MOV     T2CRL,#0C0H
                                           ; SOURCE LINE # 181
0009 E4                CLR     A
000A F5BF              MOV     T2BDRH,A
                                           ; SOURCE LINE # 182
000C F5BE              MOV     T2BDRL,A
                                           ; SOURCE LINE # 183
000E 75BD03            MOV     T2ADRH,#03H
                                           ; SOURCE LINE # 184
0011 75BCE7            MOV     T2ADRL,#0E7H
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 10  

                                           ; SOURCE LINE # 187
0014 22                RET     
             ; FUNCTION Timer2_init (END)

             ; FUNCTION Timer3_init (BEGIN)
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 194
0000 E4                CLR     A
0001 F5CB              MOV     T3ADRH,A
                                           ; SOURCE LINE # 195
0003 F5CA              MOV     T3ADRL,A
                                           ; SOURCE LINE # 197
0005 F5CD              MOV     T3BDRH,A
                                           ; SOURCE LINE # 198
0007 F5CC              MOV     T3BDRL,A
                                           ; SOURCE LINE # 200
0009 F5CF              MOV     T3CDRH,A
                                           ; SOURCE LINE # 201
000B F5CE              MOV     T3CDRL,A
                                           ; SOURCE LINE # 204
000D 75C5C6            MOV     T3OUTCRH,#0C6H
                                           ; SOURCE LINE # 206
0010 75C74E            MOV     T3PDRH,#04EH
                                           ; SOURCE LINE # 207
0013 75C61F            MOV     T3PDRL,#01FH
                                           ; SOURCE LINE # 211
0016 75C33D            MOV     T3CRH,#03DH
                                           ; SOURCE LINE # 212
0019 43C380            ORL     T3CRH,#080H
                                           ; SOURCE LINE # 219
001C 22                RET     
             ; FUNCTION Timer3_init (END)

             ; FUNCTION UART_init (BEGIN)
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 225
0000 75DA02            MOV     USICR2,#02H
                                           ; SOURCE LINE # 226
0003 75D906            MOV     USICR1,#06H
                                           ; SOURCE LINE # 227
0006 43DAAC            ORL     USICR2,#0ACH
                                           ; SOURCE LINE # 228
0009 E4                CLR     A
000A F5DB              MOV     USICR3,A
                                           ; SOURCE LINE # 229
000C 75E381            MOV     USIBD,#081H
                                           ; SOURCE LINE # 230
000F 43A908            ORL     IE1,#08H
                                           ; SOURCE LINE # 233
0012 22                RET     
             ; FUNCTION UART_init (END)

             ; FUNCTION WDT_init (BEGIN)
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 245
0000 758D95            MOV     WDTCR,#095H
                                           ; SOURCE LINE # 246
0003 90505E            MOV     DPTR,#WDTC
0006 7496              MOV     A,#096H
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 11  

0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
0009 22                RET     
             ; FUNCTION WDT_init (END)

             ; FUNCTION clock_init (BEGIN)
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 252
0000 75C828            MOV     OSCCR,#028H
                                           ; SOURCE LINE # 253
0003 E4                CLR     A
0004 F58A              MOV     SCCR,A
                                           ; SOURCE LINE # 254
0006 22                RET     
             ; FUNCTION clock_init (END)

             ; FUNCTION port_init (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 284
0000 75803A            MOV     P0,#03AH
                                           ; SOURCE LINE # 285
0003 75A1FF            MOV     P0IO,#0FFH
                                           ; SOURCE LINE # 286
0006 E4                CLR     A
0007 F5AC              MOV     P0PU,A
                                           ; SOURCE LINE # 287
0009 75913A            MOV     P0OD,#03AH
                                           ; SOURCE LINE # 289
000C 75880F            MOV     P1,#0FH
                                           ; SOURCE LINE # 290
000F 75B1CC            MOV     P1IO,#0CCH
                                           ; SOURCE LINE # 291
0012 75AD02            MOV     P1PU,#02H
                                           ; SOURCE LINE # 292
0015 75920C            MOV     P1OD,#0CH
                                           ; SOURCE LINE # 293
0018 759503            MOV     P1DB,#03H
                                           ; SOURCE LINE # 298
001B 759003            MOV     P2,#03H
                                           ; SOURCE LINE # 300
001E 75B9EB            MOV     P2IO,#0EBH
                                           ; SOURCE LINE # 301
0021 75AE10            MOV     P2PU,#010H
                                           ; SOURCE LINE # 302
0024 759383            MOV     P2OD,#083H
                                           ; SOURCE LINE # 303
0027 759602            MOV     P23DB,#02H
                                           ; SOURCE LINE # 311
002A 759803            MOV     P3,#03H
                                           ; SOURCE LINE # 312
002D 75C1F7            MOV     P3IO,#0F7H
                                           ; SOURCE LINE # 313
0030 F5AF              MOV     P3PU,A
                                           ; SOURCE LINE # 314
0032 F594              MOV     P3OD,A
                                           ; SOURCE LINE # 318
0034 75F105            MOV     P0FSR,#05H
                                           ; SOURCE LINE # 319
0037 75F315            MOV     P1FSRH,#015H
                                           ; SOURCE LINE # 320
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2022 11:43:44 PAGE 12  

003A F5F2              MOV     P1FSRL,A
                                           ; SOURCE LINE # 321
003C F5F5              MOV     P2FSRH,A
                                           ; SOURCE LINE # 322
003E 75F460            MOV     P2FSRL,#060H
                                           ; SOURCE LINE # 323
0041 75F60C            MOV     P3FSR,#0CH
                                           ; SOURCE LINE # 326
0044 22                RET     
             ; FUNCTION port_init (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
